let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/x/projects/new_StocHy
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +6 CMakeLists.txt
badd +1 make_docker.sh
badd +1 ~/init.vim
badd +1 src/case_studies/case_studies.h
badd +1 ~/OneDrive/notes/index.wiki
badd +0 src/bmdp/Bmdp.cpp
badd +87 src/bmdp/Bmdp.h
badd +1 src/stochy/CMakeLists.txt
badd +2 src/FAUST/CMakeLists.txt
badd +0 src/FAUST/FAUST.cpp
badd +0 src/FAUST/FAUST.h
badd +0 src/common/CMakeLists.txt
argglobal
silent! argdel *
edit src/common/CMakeLists.txt
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 31 + 122) / 244)
exe '2resize ' . ((&lines * 40 + 42) / 85)
exe 'vert 2resize ' . ((&columns * 106 + 122) / 244)
exe '3resize ' . ((&lines * 40 + 42) / 85)
exe 'vert 3resize ' . ((&columns * 105 + 122) / 244)
exe '4resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 4resize ' . ((&columns * 70 + 122) / 244)
exe '5resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 5resize ' . ((&columns * 70 + 122) / 244)
exe '6resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 6resize ' . ((&columns * 70 + 122) / 244)
argglobal
enew
file NERD_tree_1
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
wincmd w
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
if bufexists("src/FAUST/CMakeLists.txt") | buffer src/FAUST/CMakeLists.txt | else | edit src/FAUST/CMakeLists.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 10 - ((9 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
10
normal! 0
wincmd w
argglobal
if bufexists("src/FAUST/FAUST.h") | buffer src/FAUST/FAUST.h | else | edit src/FAUST/FAUST.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 9 - ((8 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
9
normal! 02|
wincmd w
argglobal
if bufexists("~/OneDrive/notes/index.wiki") | buffer ~/OneDrive/notes/index.wiki | else | edit ~/OneDrive/notes/index.wiki | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 13 - ((12 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
13
normal! 0
wincmd w
argglobal
if bufexists("src/FAUST/FAUST.cpp") | buffer src/FAUST/FAUST.cpp | else | edit src/FAUST/FAUST.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 7 - ((6 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
7
normal! 0
wincmd w
5wincmd w
exe 'vert 1resize ' . ((&columns * 31 + 122) / 244)
exe '2resize ' . ((&lines * 40 + 42) / 85)
exe 'vert 2resize ' . ((&columns * 106 + 122) / 244)
exe '3resize ' . ((&lines * 40 + 42) / 85)
exe 'vert 3resize ' . ((&columns * 105 + 122) / 244)
exe '4resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 4resize ' . ((&columns * 70 + 122) / 244)
exe '5resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 5resize ' . ((&columns * 70 + 122) / 244)
exe '6resize ' . ((&lines * 41 + 42) / 85)
exe 'vert 6resize ' . ((&columns * 70 + 122) / 244)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
